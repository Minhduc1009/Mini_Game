

import java.util.Scanner;

public class Tic_Tac_Toe {
	// Khai báo và thiết lập trạng thái ban đầu cho bàn cờ
	static String[][] board = { {"1", "2", "3"},
	{"4", "5", "6"},
	{"7", "8", "9"}
	 };
	static int player; // Lượt đi của người chơi (1 hoặc 2)
	
	public static void main(String[] args) {
		
	Scanner sc = new Scanner(System.in);
	System.out.println("Chào mừng các bạn đến với trò chơi Tic-Tac-Toe");
	
	System.out.println("Người chơi 1 kí hiệu là: X");
	System.out.println("Người chơi 2 kí hiệu là: O");
	System.out.println();
	int random = (int)Math.random();
	player = (random % 2 == 0 ? 1 : 2);
	int number;
	String result;
	do {
	player = 3 - player; // Xoay vòng giữa 2 giá trị1 và 2
	printBoard(); // Xuất ra trạng thái của bàn cờ
	do {
	System.out.print("Xin mời người chơi số " + player + " chọn nước đi của mình: ");
	number = sc.nextInt();
	if (!valid(number)) { // Nếu nước đi khônghợp lệ ==> bắt người chơi đi lại
	System.out.println("Nước đi của bạn không hợp lệ. Vui lòng chọn lại ô khác!");
	}
	else break;
	} while (true);
	result = checkWinner(number, player);
	} while (result.equals(""));
	printBoard();
	if (!result.equals("Hòa")) {
	System.out.println("Xin chúc mừng! Người chơi số " + player + " đã chiến thắng");
	} else {
	System.out.println("Rất tiếc, cả hai hòa nhau!");
	}
	}
	public static void printBoard() {
	System.out.println("|---|---|---|");
	System.out.println("| "+board[0][0]+" | "+board[0][1]+" | "+board[0][2]+" |");
	System.out.println("|-----------|");
	System.out.println("| "+board[1][0]+" | "+board[1][1]+" | "+board[1][2]+" |");
	System.out.println("|-----------|");
	System.out.println("| "+board[2][0]+" | "+board[2][1]+" | "+board[2][2]+" |");
	System.out.println("|---|---|---|");
	System.out.println();
	}
	public static boolean valid(int number) {
	switch(number) {
	case 1: if (!board[0][0].equals("1")) return
	false; else break;
	case 2: if (!board[0][1].equals("2")) return
	false; else break;
	case 3: if (!board[0][2].equals("3")) return
	false; else break;
	case 4: if (!board[1][0].equals("4")) return
	false; else break;
	case 5: if (!board[1][1].equals("5")) return
	false; else break;
	case 6: if (!board[1][2].equals("6")) return
	false; else break;
	case 7: if (!board[2][0].equals("7")) return
	false; else break;
	case 8: if (!board[2][1].equals("8")) return
	false; else break;
	case 9: if (!board[2][2].equals("9")) return
	false; else break;
	default: return false;
	}
	return true;
	}
	public static String checkWinner(int number, int player) {
	String symbol = (player == 1 ? "X" : "O");
	switch (number) {
	case 1: board[0][0] = symbol; break;
	case 2: board[0][1] = symbol; break;
	case 3: board[0][2] = symbol; break;
	case 4: board[1][0] = symbol; break;
	case 5: board[1][1] = symbol; break;
	case 6: board[1][2] = symbol; break;
	case 7: board[2][0] = symbol; break;
	case 8: board[2][1] = symbol; break;
	case 9: board[2][2] = symbol; break;
	}
	String line;
	
	// Kiểm tra 3 hàng ngang
	for (int i=0; i<3; i++) {
	line = board[i][0] + board[i][1] + board[i][2];
	if (line.equals("XXX") || line.equals("OOO"))
	return String.valueOf(player);
	}
	// Kiểm tra 3 hàng dọc
	for (int i=0; i<3; i++) {
	line = board[0][i] + board[1][0] + board[2][i];
	if (line.equals("XXX") || line.equals("OOO"))
	return String.valueOf(player);
	}
	// Kiểm tra đường chéo chính
	line = board[0][0] + board[1][1] + board[2][2];
	if (line.equals("XXX") || line.equals("OOO")) return
	String.valueOf(player);
	// Kiểm tra đường chéo phụ
	line = board[0][2] + board[1][1] + board[2][0];
	if (line.equals("XXX") || line.equals("OOO")) return
	String.valueOf(player);
	// Kiểm tra trạng thái hòa
	boolean draw = true;
	for (int i=0; i<3; i++)
	for (int j=0; j<3; j++)
	if (!board[i][j].equals("X") &&
	!board[i][j].equals("O")) {
	draw = false;
	break;
	}
	if (draw) return "Hòa";
	return ""; // Trạng thái rỗng (chưa có người thắng/kẻ thua/hòa
	}
	

}
